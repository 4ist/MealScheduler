{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/meal-scheduler/meal-scheduler.component.ts","./src/app/meal-scheduler/meal-scheduler.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Portal';\r\n}\r\n","<app-meal-scheduler></app-meal-scheduler>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MealSchedulerComponent } from './meal-scheduler/meal-scheduler.component';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MealSchedulerComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  exports: []\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-meal-scheduler',\r\n  templateUrl: './meal-scheduler.component.html',\r\n  styleUrls: ['./meal-scheduler.component.css'],\r\n})\r\nexport class MealSchedulerComponent implements OnInit {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  roomNumbers;\r\n  loading = false;\r\n  //TODO add a config setting to make these easier to change\r\n  liveEndpoint: string = 'https://sbolc-006-meal-scheduler.herokuapp.com';\r\n  testEndpoint: string = 'http://localhost:3001';\r\n\r\n  mealDataToGet = new FormGroup({\r\n    day: new FormControl('', Validators.required),\r\n    mealTime: new FormControl('', Validators.required),\r\n  });\r\n\r\n  getRoomNumbers(): void {\r\n    this.loading = true;\r\n    //document.getElementById('matSpinner').hidden = false;\r\n\r\n    console.log('get room numbers');\r\n    console.log('this.mealDataToGet.value:', this.mealDataToGet.value);\r\n\r\n    console.log('TODO: select params from radio button and dropdown values');\r\n    var selectedDay = this.mealDataToGet.value.day;\r\n    var selectedMealTime = this.mealDataToGet.value.mealTime;\r\n    this.callForRoomNumbers(selectedDay, selectedMealTime);\r\n  }\r\n\r\n  callForRoomNumbers(day: string, mealTime: string) {\r\n    const route = this.liveEndpoint + `/api/${day}/${mealTime}`;\r\n\r\n    this.http\r\n      .get(route) //text\r\n      .subscribe((data) => {\r\n        this.roomNumbers = data;\r\n        //document.getElementById('matSpinner').hidden = true;\r\n    this.loading = false;\r\n\r\n\r\n        console.log('Async (I think) room numbers API call');\r\n        //console.log(this.roomNumbers);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"scheduler-card\">\r\n  <mat-card-title>\r\n    Meal Scheduler\r\n    <mat-icon\r\n      #tooltip=\"matTooltip\"\r\n      matTooltip='This application will get the room numbers for all personnel who requested a meal in the given time slot.\r\n\r\n        Note that the backend API runs on a server with a sleep/wake cycle; if you make a request while it is \"asleep\" then it will take a few seconds to get a reply'\r\n      matTooltipClass=\"mat-tooltip\"\r\n      matTooltipPosition=\"right\"\r\n      matTooltipHideDelay=\"100\">\r\n      info\r\n    </mat-icon>\r\n  </mat-card-title>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"mealDataToGet\" (ngSubmit)=\"getRoomNumbers()\">\r\n      <mat-form-field>\r\n        <mat-label>Choose a day: </mat-label>\r\n        <mat-select name=\"days\" id=\"days\" formControlName=\"day\">\r\n          <mat-option value=\"\" disabled>-Select-</mat-option>\r\n          <mat-option value=\"Sunday\">Sunday</mat-option>\r\n          <mat-option value=\"Monday\">Monday</mat-option>\r\n          <mat-option value=\"Tuesday\">Tuesday</mat-option>\r\n          <mat-option value=\"Wednesday\">Wednesday</mat-option>\r\n          <mat-option value=\"Thursday\">Thursday</mat-option>\r\n          <mat-option value=\"Friday\">Friday</mat-option>\r\n          <mat-option value=\"Saturday\">Saturday</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <br />\r\n      <mat-form-field>\r\n        <mat-label>Choose a meal time: </mat-label>\r\n        <mat-select name=\"mealTimes\" id=\"mealTimes\" formControlName=\"mealTime\">\r\n          <mat-option value=\"\" disabled>-Select-</mat-option>\r\n          <mat-option value=\"Breakfast\" selected>Breakfast</mat-option>\r\n          <mat-option value=\"Lunch\">Lunch</mat-option>\r\n          <mat-option value=\"Dinner\">Dinner</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <br />\r\n      <Button type=\"submit\">Get room numbers</Button>\r\n    </form>\r\n    <p>\r\n      TODO: add a notes section to identify meal preferences (no pork, etc)\r\n    </p>\r\n    <mat-spinner id=\"matSpinner\" *ngIf=\"loading == true\"> </mat-spinner>\r\n    <ol>\r\n      <li *ngFor=\"let room of roomNumbers\">\r\n        {{ room }}\r\n      </li>\r\n    </ol>\r\n  </mat-card-content>\r\n</mat-card>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}