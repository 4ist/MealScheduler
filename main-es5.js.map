{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/meal-scheduler/meal-scheduler.component.ts","webpack:///src/app/meal-scheduler/meal-scheduler.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","MealSchedulerComponent","http","loading","liveEndpoint","testEndpoint","mealDataToGet","day","required","mealTime","console","log","value","selectedDay","selectedMealTime","callForRoomNumbers","route","get","subscribe","data","roomNumbers","getRoomNumbers","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Portal';\r\n}\r\n","<app-meal-scheduler></app-meal-scheduler>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MealSchedulerComponent } from './meal-scheduler/meal-scheduler.component';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MealSchedulerComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  exports: []\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-meal-scheduler',\r\n  templateUrl: './meal-scheduler.component.html',\r\n  styleUrls: ['./meal-scheduler.component.css'],\r\n})\r\nexport class MealSchedulerComponent implements OnInit {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  roomNumbers;\r\n  loading = false;\r\n  //TODO add a config setting to make these easier to change\r\n  liveEndpoint: string = 'https://sbolc-006-meal-scheduler.herokuapp.com';\r\n  testEndpoint: string = 'http://localhost:3001';\r\n\r\n  mealDataToGet = new FormGroup({\r\n    day: new FormControl('', Validators.required),\r\n    mealTime: new FormControl('', Validators.required),\r\n  });\r\n\r\n  getRoomNumbers(): void {\r\n    this.loading = true;\r\n    //document.getElementById('matSpinner').hidden = false;\r\n\r\n    console.log('get room numbers');\r\n    console.log('this.mealDataToGet.value:', this.mealDataToGet.value);\r\n\r\n    console.log('TODO: select params from radio button and dropdown values');\r\n    var selectedDay = this.mealDataToGet.value.day;\r\n    var selectedMealTime = this.mealDataToGet.value.mealTime;\r\n    this.callForRoomNumbers(selectedDay, selectedMealTime);\r\n  }\r\n\r\n  callForRoomNumbers(day: string, mealTime: string) {\r\n    const route = this.liveEndpoint + `/api/${day}/${mealTime}`;\r\n\r\n    this.http\r\n      .get(route) //text\r\n      .subscribe((data) => {\r\n        this.roomNumbers = data;\r\n        //document.getElementById('matSpinner').hidden = true;\r\n    this.loading = false;\r\n\r\n\r\n        console.log('Async (I think) room numbers API call');\r\n        //console.log(this.roomNumbers);\r\n      });\r\n  }\r\n}\r\n","<mat-card class=\"scheduler-card\">\r\n  <mat-card-title>\r\n    Meal Scheduler\r\n    <mat-icon\r\n      #tooltip=\"matTooltip\"\r\n      matTooltip='This application will get the room numbers for all personnel who requested a meal in the given time slot.\r\n\r\n        Note that the backend API runs on a server with a sleep/wake cycle; if you make a request while it is \"asleep\" then it will take a few seconds to get a reply'\r\n      matTooltipClass=\"mat-tooltip\"\r\n      matTooltipPosition=\"right\"\r\n      matTooltipHideDelay=\"100\">\r\n      info\r\n    </mat-icon>\r\n  </mat-card-title>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"mealDataToGet\" (ngSubmit)=\"getRoomNumbers()\">\r\n      <mat-form-field>\r\n        <mat-label>Choose a day: </mat-label>\r\n        <mat-select name=\"days\" id=\"days\" formControlName=\"day\">\r\n          <mat-option value=\"\" disabled>-Select-</mat-option>\r\n          <mat-option value=\"Sunday\">Sunday</mat-option>\r\n          <mat-option value=\"Monday\">Monday</mat-option>\r\n          <mat-option value=\"Tuesday\">Tuesday</mat-option>\r\n          <mat-option value=\"Wednesday\">Wednesday</mat-option>\r\n          <mat-option value=\"Thursday\">Thursday</mat-option>\r\n          <mat-option value=\"Friday\">Friday</mat-option>\r\n          <mat-option value=\"Saturday\">Saturday</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <br />\r\n      <mat-form-field>\r\n        <mat-label>Choose a meal time: </mat-label>\r\n        <mat-select name=\"mealTimes\" id=\"mealTimes\" formControlName=\"mealTime\">\r\n          <mat-option value=\"\" disabled>-Select-</mat-option>\r\n          <mat-option value=\"Breakfast\" selected>Breakfast</mat-option>\r\n          <mat-option value=\"Lunch\">Lunch</mat-option>\r\n          <mat-option value=\"Dinner\">Dinner</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <br />\r\n      <Button type=\"submit\">Get room numbers</Button>\r\n    </form>\r\n    <p>\r\n      TODO: add a notes section to identify meal preferences (no pork, etc)\r\n    </p>\r\n    <mat-spinner id=\"matSpinner\" *ngIf=\"loading == true\"> </mat-spinner>\r\n    <ol>\r\n      <li *ngFor=\"let room of roomNumbers\">\r\n        {{ room }}\r\n      </li>\r\n    </ol>\r\n  </mat-card-content>\r\n</mat-card>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}