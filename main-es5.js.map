{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/meal-scheduler/meal-scheduler.component.ts","webpack:///src/app/meal-scheduler/meal-scheduler.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","MealSchedulerComponent","http","liveEndpoint","testEndpoint","mealDataToGet","day","required","mealTime","console","log","value","selectedDay","selectedMealTime","callForRoomNumbers","route","get","subscribe","data","roomNumbers","getRoomNumbers","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Portal';\n}\n","<app-meal-scheduler></app-meal-scheduler>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { MealSchedulerComponent } from './meal-scheduler/meal-scheduler.component';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MealSchedulerComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatIconModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  exports: []\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-meal-scheduler',\n  templateUrl: './meal-scheduler.component.html',\n  styleUrls: ['./meal-scheduler.component.css'],\n})\nexport class MealSchedulerComponent implements OnInit {\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {}\n\n  roomNumbers;\n  //TODO add a config setting to make these easier to change\n  liveEndpoint: string = 'https://sbolc-006-meal-scheduler.herokuapp.com';\n  testEndpoint: string = 'http://localhost:3001';\n\n  mealDataToGet = new FormGroup({\n    day: new FormControl('', Validators.required),\n    mealTime: new FormControl('', Validators.required),\n  });\n\n  getRoomNumbers(): void {\n    console.log('get room numbers');\n    console.log('this.mealDataToGet.value:', this.mealDataToGet.value);\n\n    console.log('TODO: select params from radio button and dropdown values');\n    var selectedDay = this.mealDataToGet.value.day;\n    var selectedMealTime = this.mealDataToGet.value.mealTime;\n    this.callForRoomNumbers(selectedDay, selectedMealTime);\n  }\n\n  callForRoomNumbers(day: string, mealTime: string) {\n    const route = this.liveEndpoint + `/api/${day}/${mealTime}`;\n    //var responseOptions\n\n    this.http\n      .get(route) //text\n      .subscribe((data) => {\n        this.roomNumbers = data;\n        console.log('Async (I think) room numbers API call');\n        //console.log(this.roomNumbers);\n      });\n  }\n}\n","\n  <mat-card class=\"scheduler-card\">\n    <mat-card-title>\n      Meal Scheduler\n      <mat-icon\n        #tooltip=\"matTooltip\"\n        matTooltip='This application will get the room numbers for all personnel who requested a meal in the given time slot.\n\n        Note that the backend API runs on a server with a sleep/wake cycle; if you make a request while it is \"asleep\" then it will take a few seconds to get a reply'\n        matTooltipClass=\"mat-tooltip\"\n        matTooltipPosition=\"right\"\n        matTooltipHideDelay=\"100\"\n      >\n        info</mat-icon\n      >\n    </mat-card-title>\n\n    <mat-card-content>\n      <form [formGroup]=\"mealDataToGet\" (ngSubmit)=\"getRoomNumbers()\">\n        <mat-form-field>\n          <mat-label>Choose a day: </mat-label>\n          <mat-select name=\"days\" id=\"days\" formControlName=\"day\">\n            <mat-option value=\"\" disabled>-Select-</mat-option>\n            <mat-option value=\"Sunday\">Sunday</mat-option>\n            <mat-option value=\"Monday\">Monday</mat-option>\n            <mat-option value=\"Tuesday\">Tuesday</mat-option>\n            <mat-option value=\"Wednesday\">Wednesday</mat-option>\n            <mat-option value=\"Thursday\">Thursday</mat-option>\n            <mat-option value=\"Friday\">Friday</mat-option>\n            <mat-option value=\"Saturday\">Saturday</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <br />\n        <mat-form-field>\n          <mat-label>Choose a meal time: </mat-label>\n          <mat-select\n            name=\"mealTimes\"\n            id=\"mealTimes\"\n            formControlName=\"mealTime\"\n          >\n            <mat-option value=\"\" disabled>-Select-</mat-option>\n            <mat-option value=\"Breakfast\" selected>Breakfast</mat-option>\n            <mat-option value=\"Lunch\">Lunch</mat-option>\n            <mat-option value=\"Dinner\">Dinner</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <br />\n        <Button type=\"submit\">Get room numbers</Button>\n      </form>\n      <p>\n        TODO: add a notes section to identify meal preferences (no pork, etc)\n      </p>\n      <ol>\n        <li *ngFor=\"let room of roomNumbers\">\n          {{ room }}\n        </li>\n      </ol>\n    </mat-card-content>\n  </mat-card>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}