{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/meal-scheduler/meal-scheduler.component.ts","webpack:///src/app/meal-scheduler/meal-scheduler.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","MealSchedulerComponent","http","liveEndpoint","testEndpoint","mealDataToGet","day","mealTime","required","console","log","value","selectedDay","selectedMealTime","callForRoomNumbers","route","get","subscribe","data","roomNumbers","getRoomNumbers","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Portal';\n}\n","<app-meal-scheduler></app-meal-scheduler>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { MealSchedulerComponent } from './meal-scheduler/meal-scheduler.component';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MealSchedulerComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-meal-scheduler',\n  templateUrl: './meal-scheduler.component.html',\n  styleUrls: ['./meal-scheduler.component.css'],\n})\nexport class MealSchedulerComponent implements OnInit {\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {}\n\n  roomNumbers;\n  //TODO add a config setting to make these easier to change\n  liveEndpoint: string = 'https://sbolc-006-meal-scheduler.herokuapp.com';\n  testEndpoint: string = 'http://localhost:3001';\n\n  mealDataToGet = new FormGroup({\n    day: new FormControl(''),\n    mealTime: new FormControl('', Validators.required),\n  });\n\n  getRoomNumbers(): void {\n    console.log('get room numbers');\n    console.log('this.mealDataToGet.value:', this.mealDataToGet.value);\n\n    console.log('TODO: select params from radio button and dropdown values');\n    var selectedDay = this.mealDataToGet.value.day;\n    var selectedMealTime = this.mealDataToGet.value.mealTime;\n    this.callForRoomNumbers(selectedDay, selectedMealTime);\n  }\n\n  callForRoomNumbers(day: string, mealTime: string) {\n    const route = this.liveEndpoint + `/api/${day}/${mealTime}`;\n    //var responseOptions\n\n    this.http\n      .get(route) //text\n      .subscribe((data) => {\n        this.roomNumbers = data;\n        console.log('Async (I think) room numbers API call');\n        //console.log(this.roomNumbers);\n      });\n  }\n}\n","<p>This application will get the room numbers for all personnel who\n  requested a meal in the given time slot.</p>\n\n<p>Note that the backend API runs on a server with a sleep/wake cycle;\n  if you make a request while it is \"asleep\" then it will take a few\n  seconds to get a reply</p>\n\n<form [formGroup]=\"mealDataToGet\" (ngSubmit)=\"getRoomNumbers()\">\n  <label for=\"days\">Choose a day: </label>\n  <select name=\"days\" id=\"days\" formControlName=\"day\">\n    <option value=\"\" disabled>-Select-</option>\n    <option value=\"Sunday\">Sunday</option>\n    <option value=\"Monday\">Monday</option>\n    <option value=\"Tuesday\">Tuesday</option>\n    <option value=\"Wednesday\">Wednesday</option>\n    <option value=\"Thursday\">Thursday</option>\n    <option value=\"Friday\">Friday</option>\n    <option value=\"Saturday\">Saturday</option>\n  </select>\n  <br />\n  <label for=\"mealTimes\">Choose a meal time: </label>\n  <select name=\"mealTimes\" id=\"mealTimes\" formControlName=\"mealTime\">\n    <option value=\"\" disabled>-Select-</option>\n    <option value=\"Breakfast\" selected>Breakfast</option>\n    <option value=\"Lunch\">Lunch</option>\n    <option value=\"Dinner\">Dinner</option>\n  </select>\n  <br />\n  <Button type=\"submit\">Get room numbers</Button>\n</form>\n<p>TODO: add a notes section to identify meal preferences (no pork, etc)</p>\n<p>TODO: add styling; there is literaly zero css right now</p>\n<ol>\n  <li *ngFor=\"let room of roomNumbers\">\n    {{ room }}\n  </li>\n</ol>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}